// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.zalando.komang.protobuf.Events



@SerialVersionUID(0L)
final case class ConfigTypeUpdatedEvent(
    profileId: String = "",
    configId: String = "",
    `type`: String = ""
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ConfigTypeUpdatedEvent] with com.trueaccord.lenses.Updatable[ConfigTypeUpdatedEvent] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (profileId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, profileId) }
      if (configId != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, configId) }
      if (`type` != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, `type`) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = profileId
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = configId
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = `type`
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent = {
      var __profileId = this.profileId
      var __configId = this.configId
      var __type = this.`type`
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __profileId = _input__.readString()
          case 18 =>
            __configId = _input__.readString()
          case 26 =>
            __type = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent(
          profileId = __profileId,
          configId = __configId,
          `type` = __type
      )
    }
    def withProfileId(__v: String): ConfigTypeUpdatedEvent = copy(profileId = __v)
    def withConfigId(__v: String): ConfigTypeUpdatedEvent = copy(configId = __v)
    def withType(__v: String): ConfigTypeUpdatedEvent = copy(`type` = __v)
    def getField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = profileId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = configId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = `type`
          if (__t != "") __t else null
        }
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent
}

object ConfigTypeUpdatedEvent extends com.trueaccord.scalapb.GeneratedMessageCompanion[org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String]
    )
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = EventsProto.javaDescriptor.getMessageTypes.get(6)
  def messageCompanionForField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent(
  )
  implicit class ConfigTypeUpdatedEventLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, org.zalando.komang.protobuf.Events.ConfigTypeUpdatedEvent](_l) {
    def profileId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.profileId)((c_, f_) => c_.copy(profileId = f_))
    def configId: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.configId)((c_, f_) => c_.copy(configId = f_))
    def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val PROFILE_ID_FIELD_NUMBER = 1
  final val CONFIG_ID_FIELD_NUMBER = 2
  final val TYPE_FIELD_NUMBER = 3
}
